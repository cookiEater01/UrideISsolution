@model IEnumerable<Uride.Models.Vozilo>

@using Microsoft.AspNetCore.Identity;
@inject SignInManager<IdentityUser> signInManager
@inject UserManager<IdentityUser> userManager

@{
    ViewData["Title"] = "Podrobnejši podatki";
}

<h2>Podrobnejši podatki</h2>

<p>
    @if (signInManager.IsSignedIn(User))
    {
        var currentUser = await userManager.GetUserAsync(User);
        var isAdmin = currentUser != null && await userManager.IsInRoleAsync(currentUser, "Admin");
        var isDriver = currentUser != null && await userManager.IsInRoleAsync(currentUser, "Driver");
        if (isAdmin || isDriver)
        {
            <a asp-action="Create">Ustvari novo vozilo</a>
        }
    }
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Znamka)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Model)
            </th>
            <th>
                Cena prevoženega km
            </th>
            <th>
                Število sedežev
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Znamka)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Model)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CenaKm)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StSedezev)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.AvtoId">Uredi</a> |
                    <a asp-action="Details" asp-route-id="@item.AvtoId">Podrobnejši podatki</a> |
                    <a asp-action="Delete" asp-route-id="@item.AvtoId">Izbriši</a>
                </td>
            </tr>
        }
    </tbody>
</table>
